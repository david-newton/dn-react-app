{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux'; //NOTE - first time trying redux persist - wip - using default doc suggestions\n\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //reducers\n\nimport { todolist, isLoading } from './todolist/reducers/reducers';\nconst reducers = {\n  todolist,\n  isLoading\n};\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2\n};\nconst rootReducer = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const configureStore = () => createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/Users/dtnewton/Development/react-todo-c/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","persistReducer","storage","autoMergeLevel2","thunk","composeWithDevTools","todolist","isLoading","reducers","persistConfig","key","stateReconciler","rootReducer","persistedReducer","configureStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D,C,CAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,8BAApC;AAEA,MAAMC,QAAQ,GAAG;AAACF,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAjB;AACA,MAAME,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBR,EAAAA,OAFkB;AAGlBS,EAAAA,eAAe,EAAER;AAHC,CAAtB;AAKA,MAAMS,WAAW,GAAGb,eAAe,CAACS,QAAD,CAAnC;AACA,MAAMK,gBAAgB,GAAGZ,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAME,cAAc,GAAG,MAC1BhB,WAAW,CACPe,gBADO,EAEPR,mBAAmB,CACfL,eAAe,CAACI,KAAD,CADA,CAFZ,CADR","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\n\n//NOTE - first time trying redux persist - wip - using default doc suggestions\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//reducers\nimport { todolist, isLoading } from './todolist/reducers/reducers';\n\nconst reducers = {todolist, isLoading};\nconst persistConfig = {\n    key: 'root',\n    storage,\n    stateReconciler: autoMergeLevel2\n}\nconst rootReducer = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const configureStore = () => \n    createStore(\n        persistedReducer,\n        composeWithDevTools(\n            applyMiddleware(thunk)\n        )\n    );"]},"metadata":{},"sourceType":"module"}