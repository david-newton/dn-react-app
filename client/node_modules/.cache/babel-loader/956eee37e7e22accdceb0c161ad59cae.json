{"ast":null,"code":"var _jsxFileName = \"/Users/dtnewton/Development/react-todo-c/src/clockAngle/ClockAngle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Input, Button, Form, FormGroup, Label } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClockAngle = () => {\n  _s();\n\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [degrees, setDegrees] = useState(-1);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setDegrees(calculateAngle());\n  };\n\n  const validateHour = h => {\n    if (h < 0 || h > 12) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateMinutes = m => {\n    if (m < 0 || m > 59) {\n      return false;\n    }\n\n    return true;\n  }; //Returns smaller of 2 numbers\n\n\n  const getMin = (a1, a2) => {\n    if (a1 < a2) {\n      return a1;\n    }\n\n    return a2;\n  };\n\n  const calculateAngle = () => {\n    let h = Number(hours);\n    let m = Number(minutes); //initial validate\n\n    if (!validateHour(h) || !validateMinutes(m)) {\n      return -1;\n    } //User will likely input 12 and not 0\n\n\n    if (h === 12) {\n      h = 0;\n    }\n\n    const hourHandAngle = 1 / 2 * (h * 60 + m);\n    const minuteHandAngle = 6 * m;\n    const absDiff = Math.abs(hourHandAngle - minuteHandAngle); //need the min between 360 - difference and difference\n    //to get valid results around the clock\n\n    return getMin(absDiff, 360 - absDiff);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock-angle-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"Find the angle between analog clock hands given the hour/minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          margin: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \" Hours (HH):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              onChange: event => setHours(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          margin: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \" Minutes (MM): \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              onChange: event => setMinutes(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          margin: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"bg-light border\",\n        sm: {\n          offset: 1,\n          size: 'auto'\n        },\n        children: degrees === -1 ? '' : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [degrees, \" degrees\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClockAngle, \"sVmyG9/4kzpcb+0DbFxlXJCLIgo=\");\n\n_c = ClockAngle;\nexport default ClockAngle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClockAngle\");","map":{"version":3,"sources":["/Users/dtnewton/Development/react-todo-c/src/clockAngle/ClockAngle.js"],"names":["React","useState","Row","Col","Input","Button","Form","FormGroup","Label","ClockAngle","hours","setHours","minutes","setMinutes","degrees","setDegrees","handleSubmit","event","preventDefault","calculateAngle","validateHour","h","validateMinutes","m","getMin","a1","a2","Number","hourHandAngle","minuteHandAngle","absDiff","Math","abs","margin","target","value","offset","size"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Row, Col, Input, Button, Form, FormGroup, Label} from 'reactstrap';\n\nconst ClockAngle = () => {\n    const [hours, setHours] = useState('');\n    const [minutes, setMinutes] = useState('');\n    const [degrees, setDegrees] = useState(-1);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setDegrees(calculateAngle());\n    }\n\n    const validateHour = h => {\n        if (h < 0 || h > 12) {\n            return false;\n        }\n        return true;\n    }\n\n    const validateMinutes = m => {\n        if (m < 0 || m > 59) {\n            return false;\n        }\n        return true;\n    }\n\n     //Returns smaller of 2 numbers\n    const getMin = (a1, a2) => {\n        if (a1 < a2) {\n            return a1;\n        }\n        return a2;\n    } \n\n    const calculateAngle = () => {\n        let h = Number(hours);\n        let m = Number(minutes);\n        //initial validate\n        if (!validateHour(h) || !validateMinutes(m)){\n            return -1;\n        }\n\n        //User will likely input 12 and not 0\n        if (h === 12){\n            h = 0;\n        }\n        \n        const hourHandAngle = (1/2) * (h * 60 + m);\n        const minuteHandAngle = 6 * m;\n        const absDiff = Math.abs(hourHandAngle - minuteHandAngle);\n        \n        //need the min between 360 - difference and difference\n        //to get valid results around the clock\n        return getMin(absDiff, 360 - absDiff);\n    }\n\n    return (\n        <div className=\"clock-angle-wrapper\">\n            <h1 className=\"form-title\">Find the angle between analog clock hands given the hour/minutes</h1>\n            <Form onSubmit={handleSubmit}>\n                <Row style={{margin: 10}}>\n                    <Col md={3}>\n                        <FormGroup>\n                            <Label> Hours (HH):</Label>\n                            <Input type=\"number\" onChange={event => setHours(event.target.value)}/>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row style={{margin: 10}}>\n                    <Col md={3}>\n                        <FormGroup>\n                            <Label> Minutes (MM): </Label>\n                            <Input type=\"number\" onChange={event => setMinutes(event.target.value)}/>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row style={{margin: 10}}>\n                    <Col md={3}>\n                        <FormGroup>\n                            <Button type=\"submit\">Submit</Button>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </Form>\n            <br />\n            <Row>\n                <Col\n                    className='bg-light border'\n                    sm={{\n                        offset: 1,\n                        size: 'auto'\n                    }}\n                >\n                    {degrees === -1 ? '' : <h2>{degrees} degrees</h2>}   \n                </Col>\n            </Row>         \n        </div>\n    );\n};\n\nexport default ClockAngle;\n"]},"metadata":{},"sourceType":"module"}