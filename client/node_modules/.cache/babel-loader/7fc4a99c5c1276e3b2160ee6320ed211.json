{"ast":null,"code":"var _jsxFileName = \"/Users/dtnewton/Development/react-todo-c/src/todolist/ToDoList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap'; //page specific imports\n\nimport NewListForm from './NewItemForm';\nimport ListItem from './ListItem'; //actions\n\nimport { removeTask, completeTask, completeAll } from './actions/actions';\nimport { displayAlert } from './thunks/thunks'; //styles\n\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = _ref => {\n  let {\n    listItems = [],\n    onDeleteClicked,\n    onCompleteClicked,\n    onCompleteAllClicked,\n    onDisplayAlertClicked\n  } = _ref;\n  //TODO - persistor can cause listItems to be undefined/null - should protect against this or remove in memory persisting\n  const completeAllButton = listItems.some(item => !item.isComplete) ? /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => onCompleteAllClicked(),\n    className: \"complete-all-button\",\n    children: \"Complete All\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewListForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), listItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      item: item,\n      onDeleteClicked: onDeleteClicked,\n      onCompleteClicked: onDisplayAlertClicked\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this)), completeAllButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ToDoList;\n\nconst mapStateToProps = state => ({\n  listItems: state.todolist\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteClicked: data => dispatch(removeTask(data)),\n  onCompleteClicked: data => dispatch(completeTask(data)),\n  onCompleteAllClicked: () => dispatch(completeAll()),\n  onDisplayAlertClicked: () => dispatch(displayAlert)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/dtnewton/Development/react-todo-c/src/todolist/ToDoList.js"],"names":["React","connect","Button","NewListForm","ListItem","removeTask","completeTask","completeAll","displayAlert","ToDoList","listItems","onDeleteClicked","onCompleteClicked","onCompleteAllClicked","onDisplayAlertClicked","completeAllButton","some","item","isComplete","map","mapStateToProps","state","todolist","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,QAAsD,mBAAtD;AAEA,SAASC,YAAT,QAA6B,iBAA7B,C,CAEA;;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAyG;AAAA,MAAxG;AAAEC,IAAAA,SAAS,GAAG,EAAd;AAAkBC,IAAAA,eAAlB;AAAmCC,IAAAA,iBAAnC;AAAsDC,IAAAA,oBAAtD;AAA4EC,IAAAA;AAA5E,GAAwG;AACtH;AACA,QAAMC,iBAAiB,GACnBL,SAAS,CAACM,IAAV,CAAeC,IAAI,IAAI,CAACA,IAAI,CAACC,UAA7B,iBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAML,oBAAoB,EADvC;AAEI,IAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAKgB,IANpB;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,SAAS,CAACS,GAAV,CAAcF,IAAI,iBAAI,QAAC,QAAD;AAAqB,MAAA,IAAI,EAAEA,IAA3B;AAAiC,MAAA,eAAe,EAAEN,eAAlD;AAAmE,MAAA,iBAAiB,EAAEG;AAAtF,OAAeG,IAAf;AAAA;AAAA;AAAA;AAAA,YAAtB,CAHL,EAIKF,iBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;KAAMN,Q;;AAoBN,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,SAAS,EAAEW,KAAK,CAACC;AADa,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,eAAe,EAAEc,IAAI,IAAID,QAAQ,CAACnB,UAAU,CAACoB,IAAD,CAAX,CADG;AAEpCb,EAAAA,iBAAiB,EAAEa,IAAI,IAAID,QAAQ,CAAClB,YAAY,CAACmB,IAAD,CAAb,CAFC;AAGpCZ,EAAAA,oBAAoB,EAAE,MAAMW,QAAQ,CAACjB,WAAW,EAAZ,CAHA;AAIpCO,EAAAA,qBAAqB,EAAE,MAAMU,QAAQ,CAAChB,YAAD;AAJD,CAAL,CAAnC;;AAOA,eAAeP,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\n\n//page specific imports\nimport NewListForm  from './NewItemForm';\nimport ListItem from './ListItem';\n\n//actions\nimport { removeTask, completeTask, completeAll } from './actions/actions';\n\nimport { displayAlert } from './thunks/thunks';\n\n//styles\nimport './ToDoList.css';\n\nconst ToDoList = ({ listItems = [], onDeleteClicked, onCompleteClicked, onCompleteAllClicked, onDisplayAlertClicked }) => {\n    //TODO - persistor can cause listItems to be undefined/null - should protect against this or remove in memory persisting\n    const completeAllButton = \n        listItems.some(item => !item.isComplete) ?\n            <Button\n                onClick={() => onCompleteAllClicked()} \n                className=\"complete-all-button\">\n                    Complete All\n            </Button> : null;\n\n    return (\n        <div className=\"todo-list-wrapper\">\n            <h1 className=\"form-title\">Tasks</h1>\n            <NewListForm />\n            {listItems.map(item => <ListItem key={item} item={item} onDeleteClicked={onDeleteClicked} onCompleteClicked={onDisplayAlertClicked}/>)}\n            {completeAllButton}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    listItems: state.todolist,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteClicked: data => dispatch(removeTask(data)),\n    onCompleteClicked: data => dispatch(completeTask(data)),\n    onCompleteAllClicked: () => dispatch(completeAll()),\n    onDisplayAlertClicked: () => dispatch(displayAlert),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);"]},"metadata":{},"sourceType":"module"}